<Window x:Class="AutoSplitVideo.View.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:tb="http://www.hardcodet.net/taskbar"
		xmlns:commands="clr-namespace:AutoSplitVideo.Commands"
		xmlns:valueConverter="clr-namespace:AutoSplitVideo.View.ValueConverter"
		x:Name="Mw"
		Title="AutoSplitVideo" Height="618" Width="1000"
		WindowStartupLocation="CenterScreen"
		DataContext="{Binding MainWindowViewModel, ElementName=Mw}"
		Loaded="MainWindow_OnLoaded"
		Closing="MainWindow_OnClosing"
		Closed="MainWindow_OnClosed"
		>
		<Window.Resources>
			<ResourceDictionary>
				<commands:ShowWindowCommand x:Key="ShowHideCommand" />

				<Style TargetType="MenuItem">
					<Setter Property="BorderThickness" Value="3" />
				</Style>

				<ContextMenu x:Key="NotifyIconContextMenu" >
					<MenuItem Header="显示/隐藏" Click="ShowHideMenuItem_OnClick"/>
					<MenuItem Header="退出" Click="ExitMenuItem_OnClick"/>
				</ContextMenu>

				<valueConverter:ProgressValueToBrushConverter x:Key="ProgressValueToBrushConverter" />
				<valueConverter:LiveStatusConverter x:Key="LiveStatusConverter" />
				<SolidColorBrush Color="LightGray" x:Key="GridLinesBrush" />
			</ResourceDictionary>
		</Window.Resources>
	<Grid>
		<tb:TaskbarIcon x:Name="NotifyIcon"
						Visibility="Visible"
						ToolTipText="AutoSplitVideo"
						IconSource="../Resources/Asaki.ico"
						MenuActivation="RightClick"
						ContextMenu="{StaticResource NotifyIconContextMenu}"
						DoubleClickCommand="{StaticResource ShowHideCommand}"
						DoubleClickCommandParameter="{Binding}">
		</tb:TaskbarIcon>
		<TabControl>
			<TabItem Header="录播机">
				<DockPanel>
					<GroupBox Header="下次录制时生效" DockPanel.Dock="Top" Margin="3">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<TextBox Grid.Row="0" Grid.Column="0" IsReadOnly="True" Margin="3" 
							Text="{Binding CurrentConfig.RecordDirectory,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
							<Grid Grid.Row="1" Grid.Column="0" Margin="3">
								<ProgressBar Value="{Binding ProgressBarValue}" Foreground="{Binding ProgressBarValue,Converter={StaticResource ProgressValueToBrushConverter}}"/>
								<TextBlock Text="{Binding ProgressBarStr}" HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Grid>
							<Button Grid.Row="0" Grid.Column="1" Content="选择目录" Margin="3" Padding="3" Click="SelectDirectoryButton_OnClick"/>
							<Button Grid.Row="1" Grid.Column="1" Content="打开目录" Margin="3" Padding="3" Click="OpenDirectoryButton_OnClick"/>
						</Grid>
					</GroupBox>
					<ToolBar DockPanel.Dock="Top" Background="Transparent" Loaded="ToolBar_OnLoaded" >
						<Button Content="移除房间" Click="RemoveRoomButton_OnClick"/>
						<TextBox x:Name="AddRoomTextBox" Text="6154037" Width="100" KeyDown="AddRoomTextBox_OnKeyDown" />
						<Button Content="添加房间" Click="AddRoomButton_OnClick"/>
					</ToolBar>
					<DataGrid x:Name="DataGrid"
					Margin="3"
					GridLinesVisibility="All"
					HorizontalGridLinesBrush="{StaticResource GridLinesBrush}"
					VerticalGridLinesBrush="{StaticResource GridLinesBrush}"
					Background="Transparent"
					BorderThickness="1"
					BorderBrush="{StaticResource GridLinesBrush}"

					HeadersVisibility="Column"
					AutoGenerateColumns="False"
					SelectionUnit="FullRow" SelectionMode="Extended"
					CanUserAddRows="False" CanUserResizeRows="False"
					CanUserDeleteRows="False"
					ItemsSource="{Binding Rooms}"
					>
						<DataGrid.Columns>
							<DataGridTextColumn Header="短号" Binding="{Binding ShortRoomId}" IsReadOnly="True" />
							<DataGridTextColumn Header="房间号" Binding="{Binding RoomId}" IsReadOnly="True" />
							<DataGridTextColumn Header="主播" Binding="{Binding UserName}" IsReadOnly="True" />
							<DataGridTextColumn Header="直播间标题" Binding="{Binding Title}" IsReadOnly="True" />
							<DataGridTextColumn Header="直播状态" 
							Binding="{Binding IsLive,Converter={StaticResource LiveStatusConverter}}"
							IsReadOnly="True">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="DataGridCell">
										<Setter Property="Foreground" Value="{Binding IsLive,Converter={StaticResource LiveStatusConverter}}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn Header="弹幕重连间隔（ms）" Binding="{Binding TimingDanmakuRetry}" IsReadOnly="False" />
							<DataGridTextColumn Header="开播检查间隔（s）" Binding="{Binding TimingCheckInterval}" IsReadOnly="False" />
							<DataGridTemplateColumn Header="是否录制">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
										          IsChecked="{Binding Path=IsMonitor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn Header="开播提醒">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
										          IsChecked="{Binding Path=IsNotify, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
						</DataGrid.Columns>
					</DataGrid>
				</DockPanel>
			</TabItem>
			<TabItem Header="自动分段"></TabItem>
			<TabItem Header="日志">
				<TextBox
					IsReadOnly="True"
					Text="{Binding Logs.Text,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
				</TextBox>
			</TabItem>
			<TabItem Header="设置">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<CheckBox Grid.Row="0" Grid.Column="0" Margin="3,6,3,3" Content="记录日志到文件" IsChecked="{Binding CurrentConfig.LogToFile}" />
					<Button Grid.Row="0" Grid.Column="1" Margin="3" Content="清空日志" Click="ClearLogButton_OnClick"></Button>
					
				</Grid>
			</TabItem>
		</TabControl>
	</Grid>
</Window>
